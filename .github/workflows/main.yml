name: main

on:
  push

jobs:
  tests:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install dependencies
        run: | 
          python -m pip install --upgrade pip 
          pip install -r requirements.txt 

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: umar1593/stripe:latest
          file: ./Dockerfile
      - name: Set output variable
        id: tag_output
        run: |
          echo "::set-output name=tag::latest"
          echo "::set-output name=tag_sha::$(docker inspect --format='{{(index .RepoDigests 0)}}' umar1593/stripe:latest | cut -d '@' -f2)"
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled

  deploy:
    name: Deploy on Yandex.Cloud
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: SSH into remote host
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm web
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo STRIPE_PUBLIC_KEY=${{ secrets.STRIPE_PUBLIC_KEY }} >> .env
            echo STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d
            sudo docker-compose exec -T web python manage.py migrate
            sudo docker-compose exec -T web python manage.py collectstatic --no-input

      - name: Get tag and tag SHA
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          echo "TAG=${{ steps.tag_output.outputs.tag }}"
          echo "TAG_SHA=${{ steps.tag_output.outputs.tag_sha }}"
        shell: bash

  clean_up_docker_objects:
    name: Clean up unused Docker objects
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Clean up Docker objects
        uses: peter-evans/docker-cleanup@v2.4.5
        with:
          containers: "all"
          images: "local"
          volumes: "local"
